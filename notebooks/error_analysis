import os
import numpy as np
import pandas as pd
import joblib
from lime.lime_text import LimeTextExplainer

pipeline = joblib.load(f"models/{TASK}_tfidf_logreg.joblib")

texts    = val["cleaned"].fillna("").tolist()
y_true   = val["label"].values
y_pred   = pipeline.predict(texts)

fn_idx   = np.where((y_true == 1) & (y_pred == 0))[0]
fp_idx   = np.where((y_true == 0) & (y_pred == 1))[0]

rng            = np.random.RandomState(42)
fn_samples     = rng.choice(fn_idx, size=10, replace=False)
fp_samples     = rng.choice(fp_idx, size=10, replace=False)

os.makedirs("error_analysis", exist_ok=True)
records = []
for tag, idxs in [("FN", fn_samples), ("FP", fp_samples)]:
    for idx in idxs:
        records.append({
            "Type":       tag,
            "Text":       texts[idx],
            "True_Label": int(y_true[idx]),
            "Pred_Label": int(y_pred[idx]),
            "Note":       ""
        })
pd.DataFrame(records).to_csv("error_analysis/val_error_samples.csv", index=False)

explainer = LimeTextExplainer(class_names=["neg", "pos"])
for tag, samples in [("fn", fn_samples[:5]), ("fp", fp_samples[:5])]:
    for i, idx in enumerate(samples, start=1):
        exp = explainer.explain_instance(
            texts[idx],
            pipeline.predict_proba,
            num_features=10,
            top_labels=1
        )
        fig = exp.as_pyplot_figure(label=exp.available_labels()[0])
        fig.savefig(f"error_analysis/lime_{tag}_{i}.png", dpi=300)
        fig.clf()



